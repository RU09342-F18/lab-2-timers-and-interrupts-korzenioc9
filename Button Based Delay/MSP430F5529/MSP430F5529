#include <msp430.h> 


/**
 * main.c
 */
int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer

    P1DIR |= BIT0; // Set P1.0 to output direction
    P1REN |= BIT1; // Sets Pin 1.1 to be pull up/down enabled
    P1OUT |= BIT1; // Sets Pin 1.1 to pull up resistor
    P1OUT &= ~BIT0; // Turn 1.0 LED off
    P1IE |= BIT1; //  Enables interrupt on P1.1
    P1IES |= BIT1; // Enables hi/lo behavior on interrupt


    TA0CCR0 = 100;                 // timer period
    TA0CCTL0 = CCIE;                 // enable Timer A0 interrupt
    TA0CTL = TASSEL_1 + MC_1 + ID_3;        // set count mode to up, select ACLK, divide by 8


__enable_interrupt(); //enables interrupts
    while (1)
    {
    }
}
//Timer Interrupt
#pragma vector = TIMER0_A0_VECTOR
    __interrupt void Timer0_A0 ()
    {
        P1OUT ^= BIT0; //flash 1.0 LED
    }

#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    if (P1IES & BIT1)
    {
        TA0CTL = TACLR; // clear timer
        TA0CTL = TASSEL_1 + MC_2 + ID_3;  // change timer to continuous mode
        P1IES &= ~BIT1; // low to high edge trigger
    }
    else
    {
        TA0CCR0 = TA0R; // sets timer period to the value stored in TA0R
        TA0CTL = TASSEL_1 + MC_1 + ID_3;  // change timer to UP mode
        P1IES |= BIT1; // high to low edge trigger
    }
        P1IFG &= ~BIT1; // clear P1.1 interrupt flags
}
