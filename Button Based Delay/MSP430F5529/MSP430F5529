#include <msp430.h> 


/**
 * main.c
 */
int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer

    P1DIR |= BIT0;                   // Set P1.0 to output direction
    P4DIR |= BIT7;                   // Set P4.7 to output direction
    P1REN |= BIT1; // Sets Pin 1.1 to be pull up/down enabled
    P1OUT |= BIT1; // Sets Pin 1.1 to pull up resistor
    P1OUT &= ~BIT0;                  // Set the red LED off
    P4OUT &= ~BIT7;                  // Set the green LED off
    P1IE |= BIT1; //  Enables interrupt on button
    P1IES |= BIT1; // Enables high - to - low behavior on interrupt


    TA0CCR0 = 100;                 // count limit (16 bit)
    TA0CCTL0 = CCIE;                 // enable Timer A0 interrupt
    TA0CTL = TASSEL_1 + MC_1 + ID_3;        // timer A0 with ACLK, count up


__enable_interrupt(); //enables interrupts
    while (1)
    {
    }
}
//Timer Interrupt
#pragma vector = TIMER0_A0_VECTOR
    __interrupt void Timer0_A0 ()
    {
        P1OUT ^= BIT0;
        P4OUT ^= BIT7;
    }

#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    if (P1IES & BIT1)
    {
        TA0CTL = TACLR; //clear timer
        TA0CTL = TASSEL_1 + MC_2 + ID_3;  //change to continuous


        P1IES &= ~BIT1;
    }
    else
    {

    TA0CCR0 = TA0R;
    TA0CTL = TASSEL_1 + MC_1 + ID_3;  //change to continuous
    P1IES |= BIT1;
    }
    P1IFG &= ~BIT1;
}
