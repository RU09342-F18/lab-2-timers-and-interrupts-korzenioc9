#include <msp430.h> 


/**
 * main.c
 */
int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer
    BCSCTL3 = LFXT1S_2;
    
    P1DIR |= BIT0; // Set P1.0 to output direction
    P1REN |= BIT3; // Enable pull up resistor on P1.3
    P1OUT |= BIT3; // Sets Pin 1.3 to pull up resistor
    P1OUT &= ~BIT0; // Turn 1.0 LED off
    P1IE |= BIT3; //  Enables interrupt on P1.3
    P1IES |= BIT3; // Enables hi/lo behavior on interrupt


     CCTL0 = CCIE;                             // CCR0 interrupt enabled
     CCR0 =  100;                             // Sets frequency

                            
     TACTL = TASSEL_1 + MC_1 + ID_3;          // SMCLK selected, UP mode, enabled Divider = 8

__enable_interrupt(); //enables interrupts
    while (1)
    {
    }
}
//Timer Interrupt
#pragma vector = TIMER0_A0_VECTOR
    __interrupt void Timer_A ()
    {
        P1OUT ^= BIT0; // flash LED

    }

#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    if (P1IES & BIT3)
    {
        TACTL = TACLR; //clear timer
        TACTL = TASSEL_1 + MC_2 + ID_3;  //change timer to continuous mode


        P1IES &= ~BIT3; //low to high edge trigger
    }
    else
    {

        CCR0 = TA0R; //set the clock frequency to the value stored in TA0R
    TACTL = TASSEL_1 + MC_1 + ID_3;  //change timer to UP mode
    P1IES |= BIT3; //high to low edge trigger
    }
    P1IFG &= ~BIT3; //clear interrupt flags on P1.3
}
