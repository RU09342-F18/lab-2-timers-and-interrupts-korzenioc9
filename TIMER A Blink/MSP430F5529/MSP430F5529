#include <msp430.h>
/**
 * main.c
 */

void main(void)
{
  WDTCTL = WDTPW + WDTHOLD;        // Stop watchdog timer

  P1DIR |= BIT0;                   // sets P1.0 as an output
  P1OUT &= ~BIT0;                  // sets red LED off

  P4DIR |= BIT7;                   // sets P1.6 as an output
  P4OUT &= ~BIT7;                  // sets green LED off

  TA0CCR0 = 12000;                 // count limit (16 bit)
  TA0CCTL0 = 0x10;                 // enable Timer A0 interrupts, bit 4=1
  TA0CTL = TASSEL_1 + MC_1;        // timer A0 with ACLK, count up

  TA1CCR0 = 24000;                 // count limit (16 bit)
  TA1CCTL0 = 0x10;                 // enable Timer A1 interrupts, bit 4=1
  TA1CTL = TASSEL_1 + MC_1;        // timer A1 with ACLK, count up

  _BIS_SR(LPM0_bits + GIE);        // LPM0 (low power mode) interrupts enabled

}

#pragma vector=TIMER1_A0_VECTOR    // Timer1 A0 interrupt service routine

__interrupt void Timer1_A0 (void)
{
      P1OUT ^= BIT0;               // toggle red LED
}

#pragma vector=TIMER0_A0_VECTOR    // Timer0 A0 interrupt service routine

__interrupt void Timer0_A0 (void)
{
   P4OUT ^= BIT7;                  // toggle green LED
}
